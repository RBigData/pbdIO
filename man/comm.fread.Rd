% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comm.fread.r
\name{comm.fread}
\alias{comm.fread}
\title{comm.fread}
\usage{
comm.fread(
  dir,
  pattern = "*.csv$",
  shcom = NULL,
  readers = comm.size(),
  verbose = 0,
  ...
)
}
\arguments{
\item{dir}{A directory containing the files desired to be read.  The directory
should be accessible to all readers.}

\item{pattern}{The pattern for files desired to be read.}

\item{shcom}{Additional shell command passed to \code{fread}'s \code{com} parameter as: 
\code{fread(cmd = paste(shcom, file)}, where file is assigned based on rank.
For example if \code{grep <pattern> <file>} is needed, 
set \code{shcom = "grep <pattern>"}.
(Lustre note: Our Lustre file system had an odd interaction on first reads 
of a 5 GB file with \code{fread} and worked 5x faster with 
\code{shcom = "cat"} than without it. Second reads were 10x faster. No such
slowdown was observed on NFS file systems).}

\item{readers}{The number of readers.}

\item{verbose}{Determines the verbosity level. Acceptable values are 0, 1, 2, and 3 for
least to most verbosity.}

\item{...}{Additional arguments to be passed to \code{data.table::fread()}.}
}
\value{
TODO
}
\description{
Given a directory, \code{comm.fread()} reads all csv files contained
in it in parallel with available resources.
}
\examples{
\dontrun{
### Save code in a file "demo.r" and run with 2 processors by
### SHELL> mpiexec -np 2 Rscript demo.r
library(pbdMPI)
library(pbdIO)

path <- "/tmp/read"
comm.print(dir(path))
## [1] "a.csv" "b.csv"

X <- comm.fread(path)

comm.print(X, all.rank=TRUE)
## COMM.RANK = 0
##    a b c
## 1: 1 2 3
## COMM.RANK = 1
##    a b c
## 1: 2 3 4

finalize()
}

}
